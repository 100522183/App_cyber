# main.py
"""
Aplicaci√≥n principal: demostraci√≥n de almacenamiento seguro
Cumple con los requisitos de la pr√°ctica de Criptograf√≠a y Seguridad Inform√°tica.
"""
import base64
from gestion_de_usuarios import register_user, users_db, authenticate_user
from cifrado_simetrico import encrypt_data, decrypt_data
from firma_digital import sign_data, verify_signature
from pki_certificados import create_root_ca, create_intermediate_ca, sign_user_certificate

def main():
    print("\n=== üîê DEMOSTRACI√ìN DE SISTEMA DE ALMACENAMIENTO SEGURO ===\n")

    # 1Ô∏è‚É£ Registro y autenticaci√≥n de usuario
    print("‚Üí Registrando usuario...")
    register_user("alice", "mi_contrase√±a_segura")

    print("‚Üí Autenticando usuario...")
    authenticate_user("alice", "mi_contrase√±a_segura")

    # 2Ô∏è‚É£ Obtener claves del usuario
    alice_pub = base64.b64decode(users_db["alice"]["public_key"])
    alice_priv = base64.b64decode(users_db["alice"]["private_key"])
    alice_pass = "mi_contrase√±a_segura".encode("utf-8")

    # 3Ô∏è‚É£ Crear infraestructura PKI (CA ra√≠z + intermedia)
    print("\n‚Üí Creando infraestructura de certificados (PKI)...")
    root_key, root_cert = create_root_ca()
    inter_key, inter_cert = create_intermediate_ca(root_key, root_cert)
    user_cert = sign_user_certificate("alice", alice_pub, inter_key, inter_cert)
    print("Certificado emitido para:", user_cert.subject)

    # 4Ô∏è‚É£ Cifrar un archivo / mensaje
    mensaje = b"Este es un archivo confidencial almacenado de forma segura."
    print("\n‚Üí Cifrando archivo con AES-GCM y RSA-OAEP...")
    ciphertext, nonce, enc_key = encrypt_data(mensaje, alice_pub)

    # 5Ô∏è‚É£ Descifrar el archivo
    print("\n‚Üí Descifrando archivo...")
    texto_descifrado = decrypt_data(ciphertext, nonce, enc_key, alice_priv, alice_pass)
    print("Texto descifrado:", texto_descifrado.decode("utf-8"))

    # 6Ô∏è‚É£ Firmar el archivo
    print("\n‚Üí Firmando archivo con clave privada de Alice (RSA-PSS)...")
    firma = sign_data(mensaje, alice_priv, alice_pass)
    print("Firma generada:", base64.b64encode(firma).decode()[:80], "...")

    # 7Ô∏è‚É£ Verificar la firma
    print("\n‚Üí Verificando la firma digital...")
    verify_signature(mensaje, firma, alice_pub)

    print("\n‚úÖ Proceso completado correctamente.")
    print("Todos los requisitos criptogr√°ficos se demostraron en esta ejecuci√≥n.")

if __name__ == "__main__":
    main()
